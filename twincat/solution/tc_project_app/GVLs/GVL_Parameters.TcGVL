<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <GVL Name="GVL_Parameters" Id="{5744ec71-fce0-400b-ae43-6b52add682c5}">
    <Declaration><![CDATA[{attribute 'qualified_only'}
VAR_GLOBAL
  fSpeedToleranceRpm: LREAL := 0.05;
END_VAR

VAR_GLOBAL CONSTANT
  // Sectors of wheel	
  nSectors                             : LREAL := 36;
  // Pulse frequency
  nPulseFreqHz                         : LREAL := 14;
  // Nominal velocity of wheel
  fNominalSpeedRpm                     : LREAL := GVL_Parameters.nPulseFreqHz/GVL_Parameters.nSectors*60;
  // Velocity offset, to compensate for differnce in drive and timing system
  fNominalSpeedAdjust                  : LREAL:=0.001;//-0.0002;  //Timing system vs drive clock tuning. Automize later!
  // Speed for last revs needs to be below this value before start to phase 
  fPhaseSpeedTol                       : LREAL := 0.05;
  // Velocity setpoint for homing 
  fHomeSpeedRpm: LREAL := 5;
  // Maximum allowed speed
  fMaximumSPeedRpm: LREAL := GVL_Parameters.fNominalSpeedRpm*1.2;
  nMaxMotorTemperature: INT:= 90;
  nMaxBrakeTemperature: INT:= 100;
  fWheelDiameter:LREAL:=2500;
  fAccDefaultVel:LREAL:=0.039;  //RPM/S^2 (0.039 => tn min to 23.3) 
  fAccDefaultPos:LREAL:=0.001;  //RPM/S^2 (0.039 => tn min to 23.3) 
  nPhaseErrorFilterSize:INT:=36;  //Two revs
  nVeloInRangeCount:INT:=100;
  nSuperPosMaxCyclesToOutput:INT:=100;
  fSuperPosDutyCycle:LREAL:=2.0/3.0;
  nTaskSampleTime:INT:=1;
  nPhasePIDReducedSampleRateFactor:INT:=1;   //run pid every time new pulse
  nRefMarkArraySize:UDINT:=10;
  fCheckTimingPulseMinVel: LREAL:=2.0;
  fMaxPhaseOffsetMM : LREAL:=100;
  fMinPhaseOffsetMM : LREAL:=-100;
  
  // ESS-0127013 requirements
  //   FR31 Starnge to require a setting like this for commisioning.. but OK.
  bTargetRotorInstalled: BOOL:=FALSE;
  
  // Need to set resonable values here
  fXRangeH1:LREAL:=4;    // High
  fXRangeH2:LREAL:=5;  // High high
  fXRangeL1:LREAL:=-4;   // Low
  fXRangeL2:LREAL:=-5; // Low low
  fYRangeH1:LREAL:=4;
  fYRangeH2:LREAL:=5;
  fYRangeL1:LREAL:=-4;
  fYRangeL2:LREAL:=-5;
  fZRangeH1:LREAL:=4;
  fZRangeH2:LREAL:=5;
  fZRangeL1:LREAL:=1;
  fZRangeL2:LREAL:=0;
  fZRangeParkL1:LREAL:=-1.0;
  fZRangeParkL2:LREAL:=-1.1;
  
  fXStepperTargetVelo:LREAL:=0.1;
  fXStepperTargetAcc:LREAL:=0.05;
  
  fYStepperTargetVelo:LREAL:=0.1;
  fYStepperTargetAcc:LREAL:=0.05;
  
  fZStepperTargetVelo:LREAL:=0.01;
  fZStepperTargetAcc:LREAL:=0.01;
  
  fStepperTempH2:LREAL:=100;  // Deg C
  
  fXHomePosition:LREAL:=21.0;
  fYHomePosition:LREAL:=21.0;
  fZHomePosition:LREAL:=5.0;
  
  fXHomeVelOffCam:LREAL:=0.02;
  fYHomeVelOffCam:LREAL:=0.02;
  fZHomeVelOffCam:LREAL:=0.01;
  
  fXHomeVelToCam:LREAL:=0.05;
  fYHomeVelToCam:LREAL:=0.05;
  fZHomeVelToCam:LREAL:=0.03;
  
  // Phase OK calcs
  timePhaseStabilizationTime:TIME:=T#60S;
  timePhaseGreaterThanH1Time:TIME:=T#10S;
  fPhaseStabilityVelocityLowLinit:LREAL:=20.0;
  fNominalPhaseErrorLimitMM:LREAL:=2.0;
  fH1PhaseErrorLimitMM:LREAL:=5.0;
  fH2PhaseErrorLimitMM:LREAL:=10.0;
  
END_VAR]]></Declaration>
  </GVL>
</TcPlcObject>