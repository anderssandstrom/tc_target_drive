record(bo,"$(P)${DEV_NAME}-Ena-Cmd"){
  field(PINI, "1")
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),0,1)ADSPORT=852/Main.${STRUCT_CMD}.bEnable=")
  field(SCAN, "Passive")
  field(ZNAM, "Zero")
  field(ONAM, "One")
  field(DESC, "${DEV_NAME}: Drive Enable Cmd")
}

record(bi,"$(P)${DEV_NAME}-Ena-Cmd-RB"){
  field(PINI, "1")  
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),0,1)ADSPORT=852/Main.${STRUCT_CMD}.bEnable?")
  field(SCAN, "I/O Intr")
  field(ZNAM, "Zero")
  field(ONAM, "One")
  field(DESC, "${DEV_NAME}: Drive Enable Cmd RB")
}

record(bi,"$(P)${DEV_NAME}-Ena-Stat"){
  field(PINI, "1")
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),0,1)ADSPORT=852/Main.${STRUCT_STAT}.bEnabled?")
  field(SCAN, "I/O Intr")
  field(ZNAM, "Zero")
  field(ONAM, "One")
  field(DESC, "${DEV_NAME}: Drive Enabled")
}

record(ai,"$(P)${DEV_NAME}-ActPos"){
  field(PINI, "1")
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),0,1)TIMEBASE=PLC/T_DLY_MS=500/TS_MS=10/ADSPORT=852/Main.${STRUCT_STAT}.fActPos?")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DESC, "${DEV_NAME}: Motor Position [deg]")
}

record(ai,"$(P)${DEV_NAME}-ActVel"){
  field(PINI, "1")
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),0,1)ADSPORT=852/Main.${STRUCT_STAT}.fActVel?")
  field(SCAN, "I/O Intr")
  field(LINR, "SLOPE")
  field(ESLO, "0.1")
  field(EOFF, "0")   
  field(DESC, "${DEV_NAME}: Act Velocity [rpm]")
}

record(ai,"$(P)${DEV_NAME}-ActTorque"){
  field(PINI, "1")
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),0,1)ADSPORT=852/Main.${STRUCT_STAT}.fActTorque?")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DESC, "${DEV_NAME}: Act Torque [%]")
}

record(ai,"$(P)${DEV_NAME}-ActTemp"){
  field(PINI, "1")
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),0,1)ADSPORT=852/Main.${STRUCT_STAT}.fActTemp?")
  field(PREC, "2")
  field(SCAN, "I/O Intr")
  field(DESC, "${DEV_NAME}: Motor Temp [degC]")
}

record(ai,"$(P)${DEV_NAME}-ActPhaseErrorMM"){
  field(PINI, "1")
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),0,1)ADSPORT=852/T_DLY_MS=500/TS_MS=10/Main.fbModePhase.fPhaseErrorMM?")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DESC, "${DEV_NAME}: Act Phase Error [mm]")
}

record(ai,"$(P)${DEV_NAME}-MissedTimingPulses"){
  field(PINI, "1")
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),0,1)ADSPORT=852/Main.fbModePhase.nMissedTimingPulses?")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(DESC, "${DEV_NAME}: Missed Timing pulses [mm]")
}

record(mbbo,"$(P)${DEV_NAME}-State-Cmd"){
  info(asyn:READBACK,"1")
  field(PINI, "1")
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))ADSPORT=852/Main.${STRUCT_CMD}.eTargetStateCmd?")
  field(SCAN, "Passive")
  field(DESC, "${DEV_NAME}: Main State Cmd")
#  field(ZRVL, "0")
#  field(ZRST, "NONE")
#  field(ONVL, "1")
#  field(ONST, "NOT_USED")
  field(TWVL, "2")
  field(TWST, "CONSTANT_VELOCITY")
  field(THVL, "3")
  field(THST, "POSITION")
  field(FRVL, "4")
  field(FRST, "PHASE")
  field(FVVL, "5")
  field(FVST, "HOME")
  field(SXVL, "6")
  field(SXST, "TORQUE")
}

record(mbbi,"$(P)${DEV_NAME}-State-Stat"){  
  field(PINI, "1")
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))ADSPORT=852/Main.${STRUCT_STAT}.eTargetState?")
  field(SCAN, "I/O Intr")
  field(DESC, "${DEV_NAME}: Main State Status")
#  field(ONVL, "1")
#  field(ONST, "NOT_USED")
  field(TWVL, "2")
  field(TWST, "CONSTANT_VELOCITY")
  field(THVL, "3")
  field(THST, "POSITION")
  field(FRVL, "4")
  field(FRST, "PHASE")
  field(FVVL, "5")
  field(FVST, "HOME")
  field(SXVL, "6")
  field(SXST, "TORQUE")
}

record(bo,"$(P)${DEV_NAME}-ExeCmd"){
  info(asyn:READBACK,"1")
  field(PINI, "1")
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),0,1)ADSPORT=852/Main.${STRUCT_CMD}.bExecute?")
  field(SCAN, "Passive")
  field(ZNAM, "Not Executing")
  field(ONAM, "Executeing")
  field(DESC, "${DEV_NAME}: Execute Cmd")
}

record(bo,"$(P)${DEV_NAME}-Rst-Cmd"){
  info(asyn:READBACK,"1")
  field(PINI, "1")
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),0,1)ADSPORT=852/Main.${STRUCT_CMD}.bReset?")
  field(SCAN, "Passive")
  field(ZNAM, "Not Reseting")
  field(ONAM, "Reseting")
  field(DESC, "${DEV_NAME}: Reset Cmd")
}

record(ao,"$(P)${DEV_NAME}-MaxMotorTemp-Cmd"){
  info(asyn:READBACK,"1")
  field(PINI, "1")
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),0,1)ADSPORT=852/GVL_Parameters.nMaxMotorTemperature?")
  field(PREC, "1")
  field(SCAN, "I/O Intr")
  field(DESC, "${DEV_NAME}: Max Motor Temp Cmd")
}

record(ao,"$(P)${DEV_NAME}-PhaseOffetMM-Cmd"){
  info(asyn:READBACK,"1")
  field(PINI, "1")
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT),0,1)ADSPORT=852/Main.${STRUCT_CMD}.fPhaseOffsetMM?")
  field(PREC, "3")
  field(SCAN, "Passive")
  field(DESC, "${DEV_NAME}: Offset of phase in [mm]")
}

record(ai,"$(P)${DEV_NAME}-PhaseOffetDeg-Act"){
  field(PINI, "1")
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),0,1)ADSPORT=852/Main.${STRUCT_STAT}.fPhaseOffsetActDeg?")
  field(PREC, "3")
  field(SCAN, "1 second")
  field(DESC, "${DEV_NAME}: Offset of phase in [deg]")
}

record(ai,"$(P)${DEV_NAME}-LatchedPos"){
  field(PINI, "1")
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),0,1)ADSPORT=852/Main.fbModePhase.fLatchedPosition?")
  field(PREC, "0")
  field(SCAN, "I/O Intr")
  field(DESC, "${DEV_NAME}: Last Latched Position")
}

record(bi,"$(P)${DEV_NAME}-Phasing-Stat"){
  field(PINI, "1")
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),0,1)ADSPORT=852/Main.fbModePhase.bPhasing?")  
  field(SCAN, "I/O Intr")
  field(DESC, "${DEV_NAME}: Phasing")
}

record(ai,"$(P)${DEV_NAME}-ClosestSectorID"){
  field(PINI, "1")
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),0,1)ADSPORT=852/Main.fbModePhase.nClosestSectorId?")
  field(PREC, "0")
  field(SCAN, "I/O Intr")
  field(DESC, "${DEV_NAME}: Closest Sector ID")
}

record(ai,"$(P)${DEV_NAME}-ChoosenSector"){
  field(PINI, "1")
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),0,1)ADSPORT=852/Main.fbModePhase.nChoosenSector?")
  field(PREC, "0")
  field(SCAN, "I/O Intr")
  field(DESC, "${DEV_NAME}: Choosen Sector ID")
}

#record(ai,"$(P)${DEV_NAME}-Cntrl-Cmd"){
#  field(PINI, "1")
#  field(DTYP, "asynFloat64")
#  field(INP,  "@asyn($(PORT),0,1)ADSPORT=852/Main.fbModePhase.fCtrlOutput?")
#  field(PREC, "3")
#  field(SCAN, "I/O Intr")
#  field(DESC, "${DEV_NAME}: Phase PID Controller output")
#}

record(ai,"$(P)${DEV_NAME}-Vel-Stable-Count"){
  field(PINI, "1")
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),0,1)ADSPORT=852/Main.fbModePhase.iRangeOkCounter?")
  field(PREC, "0")
  field(SCAN, "I/O Intr")
  field(DESC, "${DEV_NAME}: Velocity Stable Counter")
}

record(bi,"$(P)${DEV_NAME}-Vel-Stable"){
  field(PINI, "1")
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),0,1)ADSPORT=852/Main.fbModePhase.bVeloStable?")  
  field(SCAN, "I/O Intr")
  field(DESC, "${DEV_NAME}: Velocity Stable")
  field(ZNAM, "Unstable")
  field(ONAM, "Stable")
}

record(ai,"$(P)${DEV_NAME}-VelRaw-Cmd-RB"){
  field(PINI, "1")
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),0,1)ADSPORT=852/Main.${STRUCT_STAT}.fSetVelRaw?")
  field(PREC, "0")
  field(SCAN, "I/O Intr")
  field(DESC, "${DEV_NAME}: Vel Set to Drive")
}

record(ai,"$(P)${DEV_NAME}-ActVel-LastSector"){
  field(PINI, "1")
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),0,1)ADSPORT=852/Main.fbModePhase.fLastSectorVelocity?")
  field(PREC, "0")
  field(SCAN, "I/O Intr")
  field(DESC, "${DEV_NAME}: Act Vel for Last Sector")
}

record(waveform,"$(P)ErrorStr"){
  field(PINI, "1")
  field(TSE, -2)
  field(DTYP,"asynInt8ArrayIn")
  field(INP,"@asyn($(PORT),0,1)ADSPORT=852/Main.${STRUCT_STAT}.sErrorStr?")
  field(NELM,128)
  field(SCAN,"I/O Intr")
  field(FTVL,"CHAR")
  field(DESC, "Error description")
}

record(ai,"$(P)ErrorId"){
  field(PINI, "1")
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),0,1)ADSPORT=852/Main.${STRUCT_STAT}.nErrorId?")
  field(PREC, "0")
  field(SCAN, "I/O Intr")
  field(DESC, "Error Id")
}

record(bi,"$(P)Error"){
  field(PINI, "1")
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),0,1)ADSPORT=852/Main.${STRUCT_STAT}.bError?")
  field(SCAN, "I/O Intr")
  field(DESC, "Error")
}

record(ai,"$(P)${DEV_NAME}-ActTemp_1Hz"){
  field(PINI, "1")
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),0,1)ADSPORT=852/Main.${STRUCT_STAT}.fActTemp?")
  field(PREC, "2")
  field(SCAN, "1 second")
  field(DESC, "${DEV_NAME}: Motor Temp [degC]")
}

record(ai,"$(P)${DEV_NAME}-ActTorque_1Hz"){
  field(PINI, "1")
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),0,1)ADSPORT=852/Main.${STRUCT_STAT}.fActTorque?")
  field(PREC, "3")
  field(SCAN, "1 second")
  field(DESC, "${DEV_NAME}: Act Torque [%]")
}

record(ai,"$(P)${DEV_NAME}-ActPhaseErrorMM_1Hz"){
  field(PINI, "1")
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),0,1)ADSPORT=852/Main.fbModePhase.fPhaseErrorMM?")
  field(PREC, "3")
  field(SCAN, "1 second")
  field(DESC, "${DEV_NAME}: Act Phase Error [mm]")
}

record(ai,"$(P)${DEV_NAME}-ActVel_1Hz"){
  field(PINI, "1")
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),0,1)ADSPORT=852/Main.${STRUCT_STAT}.fActVel?")
  field(SCAN, "1 second")
  field(LINR, "SLOPE")
  field(ESLO, "0.1")
  field(EOFF, "0")   
  field(DESC, "${DEV_NAME}: Act Velocity [rpm]")
}

record(ai,"$(P)${DEV_NAME}-Vel-Cmd_1Hz"){
  field(PINI, "1")
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),0,1)ADSPORT=852/Main.${STRUCT_STAT}.fSetVelRaw?")
  field(PREC, "0")
  field(SCAN, "1 second")
  field(DESC, "${DEV_NAME}: Vel Set to Drive")
}

record(ao,"$(P)${DEV_NAME}-Vel-Cmd"){
  info(asyn:READBACK,"1")
  field(PINI, "1")
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),0,1)ADSPORT=852/Main.${STRUCT_CMD}.fVelSet?")
  field(PREC, "3")
  field(SCAN, "Passive")
  field(DESC, "${DEV_NAME}: Velocity setpoint [RPM]")
}

record(ao,"$(P)${DEV_NAME}-Pos-Cmd"){
  info(asyn:READBACK,"1")
  field(PINI, "1")
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),0,1)ADSPORT=852/Main.${STRUCT_CMD}.fPosSet?")
  field(PREC, "3")
  field(SCAN, "Passive")
  field(DESC, "${DEV_NAME}: Position setpoint [deg]")
}

record(ai,"$(P)${DEV_NAME}-ActTemp_Slow"){
  field(PINI, "1")
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),0,1)ADSPORT=852/Main.${STRUCT_STAT}.fActTemp?")
  field(PREC, "2")
  field(SCAN, "1 second")
  field(DESC, "${DEV_NAME}: Motor Temp [degC]")
}

record(ai,"$(P)${DEV_NAME}-ActPhaseErrorMM_Slow"){
  field(PINI, "1")
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),0,1)ADSPORT=852/Main.fbModePhase.fPhaseErrorMM?")
  field(PREC, "3")
  field(SCAN, "1 second")
  field(DESC, "${DEV_NAME}: Act Phase Error [mm]")
}

record(ai,"$(P)${DEV_NAME}-ActVel_Slow"){
  field(PINI, "1")
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),0,1)ADSPORT=852/Main.${STRUCT_STAT}.fActVel?")
  field(SCAN, "1 second")
  field(LINR, "SLOPE")
  field(ESLO, "0.1")
  field(EOFF, "0")   
  field(DESC, "${DEV_NAME}: Act Velocity [rpm]")
}

record(ai,"$(P)${DEV_NAME}-ActTorque_Slow"){
  field(PINI, "1")
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT),0,1)ADSPORT=852/Main.${STRUCT_STAT}.fActTorque?")
  field(PREC, "3")
  field(SCAN, "1 second")
  field(DESC, "${DEV_NAME}: Act Torque [%]")
}

record(mbbo,"$(P)${DEV_NAME}-State-Phase-Ctrl-Type"){
  info(asyn:READBACK,"1")
  field(PINI, "1")
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))ADSPORT=852/Main.${STRUCT_CMD}.ePhaseCntrlAlg?")
  field(SCAN, "Passive")
  field(DESC, "${DEV_NAME}: Main Phase control algorithm")
#  field(ZRVL, "0")
#  field(ZRST, "NONE")
  field(ONVL, "1")
  field(ONST, "PID")
  field(TWVL, "2")
  field(TWST, "SUPERIMPOSE")
  field(THVL, "3")
  field(THST, "ONLY_MEASURE")
}

record(mbbo,"$(P)${DEV_NAME}-State-Phase-PWM-Type"){
  info(asyn:READBACK,"1")
  field(PINI, "1")
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))ADSPORT=852/Main.${STRUCT_CMD}.ePhasePwmType?")
  field(SCAN, "Passive")
  field(DESC, "${DEV_NAME}: Main Phase PWM Type")
  field(ZRVL, "0")
  field(ZRST, "NONE")
  field(ONVL, "1")
  field(ONST, "OPTIMIZED")
  field(TWVL, "2")
  field(TWST, "SIMPLE")
}

record(bi,"$(P)${DEV_NAME}-ManunalILOverride"){
  field(PINI, "1")  
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),0,1)ADSPORT=852/Main.${STRUCT_STAT}.bmanualInterlockOverride?")
  field(SCAN, "I/O Intr")
  field(ZNAM, "OK")
  field(ONAM, "Override")
  field(ZSV, "NO_ALARM")
  field(OSV, "MAJOR")
  field(DESC, "${DEV_NAME}: Summary Interlock OK")
}

record(bi,"$(P)${DEV_NAME}-HwOK"){
  field(PINI, "1")  
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT),0,1)ADSPORT=852/Main.${STRUCT_STAT}.bHwStatusOK?")
  field(SCAN, "I/O Intr")
  field(ZNAM, "HW Error")
  field(ONAM, "OK")
  field(ZSV, "MAJOR")
  field(OSV, "NO_ALARM")
  field(DESC, "${DEV_NAME}: Hardware Interlock")
}

